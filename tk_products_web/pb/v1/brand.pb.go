// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: brand.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetBrandResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Brand         []*Brands              `protobuf:"bytes,1,rep,name=brand,proto3" json:"brand,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBrandResp) Reset() {
	*x = GetBrandResp{}
	mi := &file_brand_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBrandResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBrandResp) ProtoMessage() {}

func (x *GetBrandResp) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBrandResp.ProtoReflect.Descriptor instead.
func (*GetBrandResp) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{0}
}

func (x *GetBrandResp) GetBrand() []*Brands {
	if x != nil {
		return x.Brand
	}
	return nil
}

type GetBrandReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           int32                  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBrandReq) Reset() {
	*x = GetBrandReq{}
	mi := &file_brand_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBrandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBrandReq) ProtoMessage() {}

func (x *GetBrandReq) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBrandReq.ProtoReflect.Descriptor instead.
func (*GetBrandReq) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{1}
}

func (x *GetBrandReq) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type SearchBrandsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Brand         []*Brands              `protobuf:"bytes,1,rep,name=brand,proto3" json:"brand,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchBrandsResp) Reset() {
	*x = SearchBrandsResp{}
	mi := &file_brand_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchBrandsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBrandsResp) ProtoMessage() {}

func (x *SearchBrandsResp) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBrandsResp.ProtoReflect.Descriptor instead.
func (*SearchBrandsResp) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{2}
}

func (x *SearchBrandsResp) GetBrand() []*Brands {
	if x != nil {
		return x.Brand
	}
	return nil
}

type SearchBrandtsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchBrandtsReq) Reset() {
	*x = SearchBrandtsReq{}
	mi := &file_brand_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchBrandtsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBrandtsReq) ProtoMessage() {}

func (x *SearchBrandtsReq) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBrandtsReq.ProtoReflect.Descriptor instead.
func (*SearchBrandtsReq) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{3}
}

func (x *SearchBrandtsReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListBrandsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Brand         []*Brands              `protobuf:"bytes,1,rep,name=brand,proto3" json:"brand,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBrandsResp) Reset() {
	*x = ListBrandsResp{}
	mi := &file_brand_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBrandsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBrandsResp) ProtoMessage() {}

func (x *ListBrandsResp) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBrandsResp.ProtoReflect.Descriptor instead.
func (*ListBrandsResp) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{4}
}

func (x *ListBrandsResp) GetBrand() []*Brands {
	if x != nil {
		return x.Brand
	}
	return nil
}

type ListBrandsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBrandsReq) Reset() {
	*x = ListBrandsReq{}
	mi := &file_brand_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBrandsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBrandsReq) ProtoMessage() {}

func (x *ListBrandsReq) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBrandsReq.ProtoReflect.Descriptor instead.
func (*ListBrandsReq) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{5}
}

func (x *ListBrandsReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListBrandsReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type DeleteBrandResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBrandResp) Reset() {
	*x = DeleteBrandResp{}
	mi := &file_brand_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBrandResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBrandResp) ProtoMessage() {}

func (x *DeleteBrandResp) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBrandResp.ProtoReflect.Descriptor instead.
func (*DeleteBrandResp) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{6}
}

type DeleteBrandReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid           int32                  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBrandReq) Reset() {
	*x = DeleteBrandReq{}
	mi := &file_brand_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBrandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBrandReq) ProtoMessage() {}

func (x *DeleteBrandReq) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBrandReq.ProtoReflect.Descriptor instead.
func (*DeleteBrandReq) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteBrandReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteBrandReq) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type UpdateBrandResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBrandResp) Reset() {
	*x = UpdateBrandResp{}
	mi := &file_brand_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBrandResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBrandResp) ProtoMessage() {}

func (x *UpdateBrandResp) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBrandResp.ProtoReflect.Descriptor instead.
func (*UpdateBrandResp) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{8}
}

type UpdateBrandReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Brand         *Brands                `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBrandReq) Reset() {
	*x = UpdateBrandReq{}
	mi := &file_brand_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBrandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBrandReq) ProtoMessage() {}

func (x *UpdateBrandReq) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBrandReq.ProtoReflect.Descriptor instead.
func (*UpdateBrandReq) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateBrandReq) GetBrand() *Brands {
	if x != nil {
		return x.Brand
	}
	return nil
}

type CreateBrandResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Brand         *Brands                `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBrandResp) Reset() {
	*x = CreateBrandResp{}
	mi := &file_brand_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBrandResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBrandResp) ProtoMessage() {}

func (x *CreateBrandResp) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBrandResp.ProtoReflect.Descriptor instead.
func (*CreateBrandResp) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{10}
}

func (x *CreateBrandResp) GetBrand() *Brands {
	if x != nil {
		return x.Brand
	}
	return nil
}

type CreateBrandReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Brand         *Brands                `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBrandReq) Reset() {
	*x = CreateBrandReq{}
	mi := &file_brand_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBrandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBrandReq) ProtoMessage() {}

func (x *CreateBrandReq) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBrandReq.ProtoReflect.Descriptor instead.
func (*CreateBrandReq) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{11}
}

func (x *CreateBrandReq) GetBrand() *Brands {
	if x != nil {
		return x.Brand
	}
	return nil
}

type Brands struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Logo          string                 `protobuf:"bytes,3,opt,name=logo,proto3" json:"logo,omitempty"`
	Uid           int32                  `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Brands) Reset() {
	*x = Brands{}
	mi := &file_brand_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Brands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Brands) ProtoMessage() {}

func (x *Brands) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Brands.ProtoReflect.Descriptor instead.
func (*Brands) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{12}
}

func (x *Brands) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Brands) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Brands) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *Brands) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

var File_brand_proto protoreflect.FileDescriptor

var file_brand_proto_rawDesc = string([]byte{
	0x0a, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x22, 0x33, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x73, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x1f, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x10, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23,
	0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x22, 0x26, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x0e, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a,
	0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x22, 0x40, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x32, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x35,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x23, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x05,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x36, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x35, 0x0a,
	0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x23, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x22, 0x52, 0x0a, 0x06, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x32, 0x86, 0x03, 0x0a, 0x0c, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x15, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x15, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x15, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0a, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x14, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x17, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x42, 0x82, 0x01, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x42,
	0x0a, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x35, 0x20,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x75, 0x6d, 0x73, 0x69,
	0x6e, 0x61, 0x2f, 0x74, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x74,
	0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x5f, 0x77, 0x65, 0x62, 0x2f, 0x76,
	0x31, 0x3b, 0x70, 0x62, 0xa2, 0x02, 0x03, 0x42, 0x58, 0x58, 0xaa, 0x02, 0x05, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0xca, 0x02, 0x05, 0x42, 0x72, 0x61, 0x6e, 0x64, 0xe2, 0x02, 0x11, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x05, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_brand_proto_rawDescOnce sync.Once
	file_brand_proto_rawDescData []byte
)

func file_brand_proto_rawDescGZIP() []byte {
	file_brand_proto_rawDescOnce.Do(func() {
		file_brand_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_brand_proto_rawDesc), len(file_brand_proto_rawDesc)))
	})
	return file_brand_proto_rawDescData
}

var file_brand_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_brand_proto_goTypes = []any{
	(*GetBrandResp)(nil),     // 0: brand.GetBrandResp
	(*GetBrandReq)(nil),      // 1: brand.GetBrandReq
	(*SearchBrandsResp)(nil), // 2: brand.SearchBrandsResp
	(*SearchBrandtsReq)(nil), // 3: brand.SearchBrandtsReq
	(*ListBrandsResp)(nil),   // 4: brand.ListBrandsResp
	(*ListBrandsReq)(nil),    // 5: brand.ListBrandsReq
	(*DeleteBrandResp)(nil),  // 6: brand.DeleteBrandResp
	(*DeleteBrandReq)(nil),   // 7: brand.DeleteBrandReq
	(*UpdateBrandResp)(nil),  // 8: brand.UpdateBrandResp
	(*UpdateBrandReq)(nil),   // 9: brand.UpdateBrandReq
	(*CreateBrandResp)(nil),  // 10: brand.CreateBrandResp
	(*CreateBrandReq)(nil),   // 11: brand.CreateBrandReq
	(*Brands)(nil),           // 12: brand.Brands
}
var file_brand_proto_depIdxs = []int32{
	12, // 0: brand.GetBrandResp.brand:type_name -> brand.Brands
	12, // 1: brand.SearchBrandsResp.brand:type_name -> brand.Brands
	12, // 2: brand.ListBrandsResp.brand:type_name -> brand.Brands
	12, // 3: brand.UpdateBrandReq.brand:type_name -> brand.Brands
	12, // 4: brand.CreateBrandResp.brand:type_name -> brand.Brands
	12, // 5: brand.CreateBrandReq.brand:type_name -> brand.Brands
	11, // 6: brand.BrandService.CreateBrand:input_type -> brand.CreateBrandReq
	9,  // 7: brand.BrandService.UpdateBrand:input_type -> brand.UpdateBrandReq
	7,  // 8: brand.BrandService.DeleteBrand:input_type -> brand.DeleteBrandReq
	5,  // 9: brand.BrandService.ListBrands:input_type -> brand.ListBrandsReq
	3,  // 10: brand.BrandService.SearchBrands:input_type -> brand.SearchBrandtsReq
	1,  // 11: brand.BrandService.GetBrand:input_type -> brand.GetBrandReq
	10, // 12: brand.BrandService.CreateBrand:output_type -> brand.CreateBrandResp
	8,  // 13: brand.BrandService.UpdateBrand:output_type -> brand.UpdateBrandResp
	6,  // 14: brand.BrandService.DeleteBrand:output_type -> brand.DeleteBrandResp
	4,  // 15: brand.BrandService.ListBrands:output_type -> brand.ListBrandsResp
	2,  // 16: brand.BrandService.SearchBrands:output_type -> brand.SearchBrandsResp
	0,  // 17: brand.BrandService.GetBrand:output_type -> brand.GetBrandResp
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_brand_proto_init() }
func file_brand_proto_init() {
	if File_brand_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_brand_proto_rawDesc), len(file_brand_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_brand_proto_goTypes,
		DependencyIndexes: file_brand_proto_depIdxs,
		MessageInfos:      file_brand_proto_msgTypes,
	}.Build()
	File_brand_proto = out.File
	file_brand_proto_goTypes = nil
	file_brand_proto_depIdxs = nil
}
